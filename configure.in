AC_INIT(README.Force)
AC_CANONICAL_TARGET
OPENIPMI_PKG_NAME=OpenIPMI
OPENIPMI_VERSION_MAJOR=1
OPENIPMI_VERSION_MINOR=3
OPENIPMI_VERSION_RELEASE=16
OPENIPMI_VERSION_EXTRA=
AM_INIT_AUTOMAKE(OpenIPMI, ${OPENIPMI_VERSION_MAJOR}.${OPENIPMI_VERSION_MINOR}.${OPENIPMI_VERSION_RELEASE}${OPENIPMI_VERSION_EXTRA})

SNMPLIBS=

# Where do we find the UCD SNMP includes and libs
tryucdsnmp=yes
AC_ARG_WITH(ucdsnmp,
[  --with-ucdsnmp=PATH             Look for ucdsnmp in PATH.],
    if test "x$withval" = "xyes"; then
      tryucdsnmp=yes
    elif test "x$withval" = "xno"; then
      tryucdsnmp=no
    elif test -d "$withval"; then
      CPPFLAGS="-I$withval/include $CPPFLAGS"
      SNMPLIBS="-L$withval/lib $SNMPLIBS"
      tryucdsnmp=yes
    fi,
)

# If UCD SNMP requires OpenSSL, this tells where to find the crypto lib
tryopenssl=yes
AC_ARG_WITH(openssl,
[  --with-openssl=PATH             Look for openssl in PATH.],
    if test "x$withval" = "xyes"; then
      tryopenssl=yes
    elif test "x$withval" = "xno"; then
      tryopenssl=no
    elif test -d "$withval"; then
      SNMPLIBS="-L$withval/lib $SNMPLIBS"
      tryopenssl=yes
    fi,
)

AC_PROG_CC
AM_PROG_LIBTOOL
AC_STDC_HEADERS
AC_CHECK_FUNCS(getaddrinfo)

AC_SUBST(SNMPLIBS)
AC_SUBST(OPENIPMI_VERSION_MAJOR)
AC_SUBST(OPENIPMI_VERSION_MINOR)
AC_SUBST(OPENIPMI_VERSION_RELEASE)
AC_SUBST(OPENIPMI_VERSION_EXTRA)

if test "x$tryucdsnmp" != "xno"; then

   HAVE_UCDSNMP=no
   HAVE_NETSNMP=no
   FOUND_SNMPINCL=no
   # Try net snmp first
   AC_CHECK_HEADER(net-snmp/net-snmp-config.h,
                   FOUND_SNMPINCL=yes; HAVE_NETSNMP=yes; )
   if test "x$FOUND_SNMPINCL" == "xno"; then
      # Try old UCD snmp
      AC_CHECK_HEADER(snmp_api.h, FOUND_SNMPINCL=yes; )
      if test "x$FOUND_SNMPINCL" == "xno"; then
          AC_CHECK_HEADER(ucd-snmp/snmp_api.h,
                   FOUND_SNMPINCL=yes;
		   AC_DEFINE(HAVE_ALT_UCDSNMP_DIR))
      fi
   fi

   if test "x$FOUND_SNMPINCL" == "xyes"; then
      if test "x$HAVE_NETSNMP" == "xyes"; then
         AC_CHECK_LIB(netsnmp, snmp_add, 
		      SNMPLIBS="-lnetsnmp $SNMPLIBS"
		      AC_DEFINE(HAVE_UCDSNMP)
		      AC_DEFINE(HAVE_NETSNMP)
		      HAVE_UCDSNMP=yes
		      HAVE_NETSNMP=yes,
		      ,
		      $SNMPLIBS)
         if test "x$HAVE_UCDSNMP" == "xno"; then
	     # Try net snmp with crypto
	     AC_CHECK_LIB(netsnmp, snmp_add_full, 
	                  SNMPLIBS="-lnetsnmp -lcrypto $SNMPLIBS"
			  AC_DEFINE(HAVE_UCDSNMP)
			  AC_DEFINE(HAVE_NETSNMP)
			  HAVE_UCDSNMP=yes
			  HAVE_NETSNMP=yes,
			  ,
			  -lcrypto $SNMPLIBS)
         fi
         if test "x$HAVE_UCDSNMP" == "xno"; then
	     AC_MSG_WARN([Found NET SNMP include files, but could not find libraries])
	 fi
      else
         AC_CHECK_LIB(snmp, snmp_open_ex, 
		      SNMPLIBS="-lsnmp $SNMPLIBS"
		      AC_DEFINE(HAVE_UCDSNMP)
		      HAVE_UCDSNMP=yes,
		      ,
		      $SNMPLIBS)
         if test "x$HAVE_UCDSNMP" == "xno"; then
            # Try with the crypto lib
            AC_CHECK_LIB(snmp, snmp_sess_perror, 
		         SNMPLIBS="-lsnmp -lcrypto $SNMPLIBS"
			 AC_DEFINE(HAVE_UCDSNMP)
			 HAVE_UCDSNMP=yes,
			 ,
			 -lcrypto $SNMPLIBS)
         fi
         if test "x$HAVE_UCDSNMP" == "xno"; then
	     AC_MSG_WARN([Found UCD SNMP include files, but could not find libraries])
	 fi
      fi
   fi
fi

AC_OUTPUT(Makefile
	  utils/Makefile
	  lib/Makefile
	  unix/Makefile
	  ui/Makefile
	  lanserv/Makefile
	  sample/Makefile
	  doc/Makefile
	  man/Makefile
	  include/Makefile
	  include/OpenIPMI/Makefile
	  include/OpenIPMI/ipmiif.h
	  include/linux/Makefile
	  include/net/Makefile
	  OpenIPMI.spec
	  OpenIPMIutils.pc
	  OpenIPMI.pc
	  OpenIPMIpthread.pc
	  OpenIPMIposix.pc
	  OpenIPMIui.pc)
